<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.finance.www.mapper.QueryBigLoanMapper" >
  <resultMap id="BaseResultMap" type="com.finance.www.pojo.BigLoan" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="xingzhi" property="xingzhi" jdbcType="INTEGER" />
    <result column="howlong" property="howlong" jdbcType="INTEGER" />
    <result column="paymethod" property="paymethod" jdbcType="INTEGER" />
    <result column="idcardone" property="idcardone" jdbcType="VARCHAR" />
    <result column="idcardtwo" property="idcardtwo" jdbcType="VARCHAR" />
    <result column="bankcard" property="bankcard" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_id, amount, xingzhi, howlong, paymethod, idcardone, idcardtwo, bankcard, 
    create_time, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.finance.www.pojo.BigLoanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from big_loan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from big_loan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from big_loan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.finance.www.pojo.BigLoanExample" >
    delete from big_loan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.finance.www.pojo.BigLoan" >
    insert into big_loan (id, member_id, amount, 
      xingzhi, howlong, paymethod, 
      idcardone, idcardtwo, bankcard, 
      create_time, state)
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{amount,jdbcType=BIGINT}, 
      #{xingzhi,jdbcType=INTEGER}, #{howlong,jdbcType=INTEGER}, #{paymethod,jdbcType=INTEGER}, 
      #{idcardone,jdbcType=VARCHAR}, #{idcardtwo,jdbcType=VARCHAR}, #{bankcard,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.finance.www.pojo.BigLoan" >
    insert into big_loan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="xingzhi != null" >
        xingzhi,
      </if>
      <if test="howlong != null" >
        howlong,
      </if>
      <if test="paymethod != null" >
        paymethod,
      </if>
      <if test="idcardone != null" >
        idcardone,
      </if>
      <if test="idcardtwo != null" >
        idcardtwo,
      </if>
      <if test="bankcard != null" >
        bankcard,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="xingzhi != null" >
        #{xingzhi,jdbcType=INTEGER},
      </if>
      <if test="howlong != null" >
        #{howlong,jdbcType=INTEGER},
      </if>
      <if test="paymethod != null" >
        #{paymethod,jdbcType=INTEGER},
      </if>
      <if test="idcardone != null" >
        #{idcardone,jdbcType=VARCHAR},
      </if>
      <if test="idcardtwo != null" >
        #{idcardtwo,jdbcType=VARCHAR},
      </if>
      <if test="bankcard != null" >
        #{bankcard,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.finance.www.pojo.BigLoanExample" resultType="java.lang.Integer" >
    select count(*) from big_loan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update big_loan
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.xingzhi != null" >
        xingzhi = #{record.xingzhi,jdbcType=INTEGER},
      </if>
      <if test="record.howlong != null" >
        howlong = #{record.howlong,jdbcType=INTEGER},
      </if>
      <if test="record.paymethod != null" >
        paymethod = #{record.paymethod,jdbcType=INTEGER},
      </if>
      <if test="record.idcardone != null" >
        idcardone = #{record.idcardone,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardtwo != null" >
        idcardtwo = #{record.idcardtwo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankcard != null" >
        bankcard = #{record.bankcard,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update big_loan
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=BIGINT},
      xingzhi = #{record.xingzhi,jdbcType=INTEGER},
      howlong = #{record.howlong,jdbcType=INTEGER},
      paymethod = #{record.paymethod,jdbcType=INTEGER},
      idcardone = #{record.idcardone,jdbcType=VARCHAR},
      idcardtwo = #{record.idcardtwo,jdbcType=VARCHAR},
      bankcard = #{record.bankcard,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.finance.www.pojo.BigLoan" >
    update big_loan
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="xingzhi != null" >
        xingzhi = #{xingzhi,jdbcType=INTEGER},
      </if>
      <if test="howlong != null" >
        howlong = #{howlong,jdbcType=INTEGER},
      </if>
      <if test="paymethod != null" >
        paymethod = #{paymethod,jdbcType=INTEGER},
      </if>
      <if test="idcardone != null" >
        idcardone = #{idcardone,jdbcType=VARCHAR},
      </if>
      <if test="idcardtwo != null" >
        idcardtwo = #{idcardtwo,jdbcType=VARCHAR},
      </if>
      <if test="bankcard != null" >
        bankcard = #{bankcard,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finance.www.pojo.BigLoan" >
    update big_loan
    set member_id = #{memberId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=BIGINT},
      xingzhi = #{xingzhi,jdbcType=INTEGER},
      howlong = #{howlong,jdbcType=INTEGER},
      paymethod = #{paymethod,jdbcType=INTEGER},
      idcardone = #{idcardone,jdbcType=VARCHAR},
      idcardtwo = #{idcardtwo,jdbcType=VARCHAR},
      bankcard = #{bankcard,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="addBigLoan" parameterType="com.finance.www.vox.AddBigLoan" useGeneratedKeys="true" keyProperty="id">
    insert into big_loan (member_id, amount,xingzhi,howlong, paymethod)
    values (#{memberId}, #{amount},#{xingzhi}, #{howlong}, #{paymethod})
  </insert>
  <select id="query" parameterType="int" resultType="com.finance.www.vo.ApplyMoney">
    SELECT
    xingzhi biaoTi,
    amount  money,
    howlong qixian ,
    create_time shijian,
    state state
    FROM big_loan
    WHERE
    member_id = #{memberId}
    AND
    state =#{state}

  </select>
</mapper>