<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finance.www.oauth_server_8050.mapper.TbPermissionMapper">
    <resultMap id="BaseResultMap" type="com.finance.www.oauth_server_8050.pojo.TbPermission">
        <!--@mbg.generated-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="enname" jdbcType="VARCHAR" property="enname"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, parent_id, `name`, enname, url, description, created, updated
    </sql>
    <select id="selectByExample" parameterType="com.finance.www.oauth_server_8050.pojo.TbPermissionExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from tb_permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from tb_permission
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.finance.www.oauth_server_8050.pojo.TbPermissionExample">
        <!--@mbg.generated-->
        delete from tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.finance.www.oauth_server_8050.pojo.TbPermission" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into tb_permission (parent_id, `name`, enname,
        url, description, created,
        updated)
        values (#{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{enname,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP},
        #{updated,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.finance.www.oauth_server_8050.pojo.TbPermission" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into tb_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="name != null and name != ''">
                `name`,
            </if>
            <if test="enname != null and enname != ''">
                enname,
            </if>
            <if test="url != null and url != ''">
                url,
            </if>
            <if test="description != null and description != ''">
                description,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null and name != ''">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="enname != null and enname != ''">
                #{enname,jdbcType=VARCHAR},
            </if>
            <if test="url != null and url != ''">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null and description != ''">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.finance.www.oauth_server_8050.pojo.TbPermissionExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update tb_permission
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.enname != null">
                enname = #{record.enname,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.created != null">
                created = #{record.created,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updated != null">
                updated = #{record.updated,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update tb_permission
        set id = #{record.id,jdbcType=BIGINT},
        parent_id = #{record.parentId,jdbcType=BIGINT},
        `name` = #{record.name,jdbcType=VARCHAR},
        enname = #{record.enname,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        created = #{record.created,jdbcType=TIMESTAMP},
        updated = #{record.updated,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.finance.www.oauth_server_8050.pojo.TbPermission">
        <!--@mbg.generated-->
        update tb_permission
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null and name != ''">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="enname != null and enname != ''">
                enname = #{enname,jdbcType=VARCHAR},
            </if>
            <if test="url != null and url != ''">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null and description != ''">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.finance.www.oauth_server_8050.pojo.TbPermission">
        <!--@mbg.generated-->
        update tb_permission
        set parent_id = #{parentId,jdbcType=BIGINT},
        `name` = #{name,jdbcType=VARCHAR},
        enname = #{enname,jdbcType=VARCHAR},
        url = #{url,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        created = #{created,jdbcType=TIMESTAMP},
        updated = #{updated,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2019-07-30-->
    <select id="selectAllByMemberId" resultMap="BaseResultMap">
     SELECT
        tb_permission.id,
        tb_permission.parent_id,
        tb_permission.`name`,
        tb_permission.enname,
        tb_permission.url,
        tb_permission.description,
        tb_permission.created,
        tb_permission.updated
        FROM
        memeber
        LEFT JOIN tb_user_role ON memeber.id = tb_user_role.user_id
        LEFT JOIN tb_role ON tb_user_role.role_id = tb_role.id
        LEFT JOIN tb_role_permission ON tb_role_permission.role_id = tb_role.id
        LEFT JOIN tb_permission ON tb_permission.id = tb_role_permission.permission_id
        WHERE
        memeber.id = #{id,jdbcType=BIGINT}

  </select>
</mapper>