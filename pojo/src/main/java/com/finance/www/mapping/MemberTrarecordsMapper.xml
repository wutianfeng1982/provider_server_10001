<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finance.www.pojo.MemberTrarecordsMapper">
  <resultMap id="BaseResultMap" type="com.finance.www.pojo.MemberTrarecords">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="deal_flow_sn" jdbcType="CHAR" property="dealFlowSn" />
    <result column="commerce_note" jdbcType="VARCHAR" property="commerceNote" />
    <result column="counterparty" jdbcType="VARCHAR" property="counterparty" />
    <result column="operation_amount" jdbcType="VARCHAR" property="operationAmount" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, deal_flow_sn, commerce_note, counterparty, operation_amount, `type`, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.finance.www.pojo.MemberTrarecordsExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_trarecords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from member_trarecords
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from member_trarecords
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.finance.www.pojo.MemberTrarecordsExample">
    <!--@mbg.generated-->
    delete from member_trarecords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.finance.www.pojo.MemberTrarecords" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into member_trarecords (deal_flow_sn, commerce_note, counterparty, 
      operation_amount, `type`, create_time, 
      update_time)
    values (#{dealFlowSn,jdbcType=CHAR}, #{commerceNote,jdbcType=VARCHAR}, #{counterparty,jdbcType=VARCHAR}, 
      #{operationAmount,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.finance.www.pojo.MemberTrarecords" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into member_trarecords
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dealFlowSn != null and dealFlowSn != ''">
        deal_flow_sn,
      </if>
      <if test="commerceNote != null and commerceNote != ''">
        commerce_note,
      </if>
      <if test="counterparty != null and counterparty != ''">
        counterparty,
      </if>
      <if test="operationAmount != null and operationAmount != ''">
        operation_amount,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dealFlowSn != null and dealFlowSn != ''">
        #{dealFlowSn,jdbcType=CHAR},
      </if>
      <if test="commerceNote != null and commerceNote != ''">
        #{commerceNote,jdbcType=VARCHAR},
      </if>
      <if test="counterparty != null and counterparty != ''">
        #{counterparty,jdbcType=VARCHAR},
      </if>
      <if test="operationAmount != null and operationAmount != ''">
        #{operationAmount,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.finance.www.pojo.MemberTrarecordsExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from member_trarecords
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update member_trarecords
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dealFlowSn != null">
        deal_flow_sn = #{record.dealFlowSn,jdbcType=CHAR},
      </if>
      <if test="record.commerceNote != null">
        commerce_note = #{record.commerceNote,jdbcType=VARCHAR},
      </if>
      <if test="record.counterparty != null">
        counterparty = #{record.counterparty,jdbcType=VARCHAR},
      </if>
      <if test="record.operationAmount != null">
        operation_amount = #{record.operationAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update member_trarecords
    set id = #{record.id,jdbcType=INTEGER},
      deal_flow_sn = #{record.dealFlowSn,jdbcType=CHAR},
      commerce_note = #{record.commerceNote,jdbcType=VARCHAR},
      counterparty = #{record.counterparty,jdbcType=VARCHAR},
      operation_amount = #{record.operationAmount,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.finance.www.pojo.MemberTrarecords">
    <!--@mbg.generated-->
    update member_trarecords
    <set>
      <if test="dealFlowSn != null and dealFlowSn != ''">
        deal_flow_sn = #{dealFlowSn,jdbcType=CHAR},
      </if>
      <if test="commerceNote != null and commerceNote != ''">
        commerce_note = #{commerceNote,jdbcType=VARCHAR},
      </if>
      <if test="counterparty != null and counterparty != ''">
        counterparty = #{counterparty,jdbcType=VARCHAR},
      </if>
      <if test="operationAmount != null and operationAmount != ''">
        operation_amount = #{operationAmount,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finance.www.pojo.MemberTrarecords">
    <!--@mbg.generated-->
    update member_trarecords
    set deal_flow_sn = #{dealFlowSn,jdbcType=CHAR},
      commerce_note = #{commerceNote,jdbcType=VARCHAR},
      counterparty = #{counterparty,jdbcType=VARCHAR},
      operation_amount = #{operationAmount,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>